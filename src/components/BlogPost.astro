---
import "../styles/global.css";
import { formatArticleDate } from "../utils/formatArticleDate";
import { formatCategoryListDisplayText } from "../utils/formatCategoryListDisplayText";

const { title, url, image, description, avatar, authors, date, categories } =
  Astro.props;

const categoryDisplayText = formatCategoryListDisplayText(categories);
const formattedDate = formatArticleDate(date);
---

<!-- <div class="list-container">
  <a href={url}
    ><img class="list-image" src={image} alt={title} loading="lazy" />
    <div class="list-text-container">
      <h2 class="list-title"><a href={url}>{title}</a></h2>
      <p class="list-description">{description}</p>
    </div>
    <div class="list-details-container">
      <img class="list-avatar" src={avatar} alt="avatar" />
      <div class="list-authors">{authors}</div>
      <div class="list-date">{formattedDate}</div>
      <div class="list-categories">{categoryDisplayText}</div>
    </div>
  </a>
</div> -->
<div class="card">
  <div class="card-content">
    <h2 class="card-title">{title}</h2>
    <p class="card-body">{description}</p>
  </div>
</div>
<style define:vars={{ image: `url("${image}")` }}>
  .card {
    color: var(--text);
    background-image: var(--image);
    background-size: cover;
    max-width: 676px;
    padding: 160px 0 0;
    border-radius: 24px;
    margin-top: 40px;
    overflow: hidden;
    transition: transform 1s ease;
  }

  .card:hover,
  .card:focus-within {
    transform: scale(1.05);
  }

  .card-content {
    --padding: 24px;
    padding: var(--padding);
    max-height: 220px;
    height: 100%;
    background: linear-gradient(
      rgba(0, 0, 0, 0),
      rgba(0, 0, 0, 1) 20%,
      rgba(0, 0, 0, 1)
    );
  }

  .card-title {
    position: relative;
    width: 100%;
    text-align: center;
  }

  .card-title::after {
    content: "";
    position: absolute;
    height: 4px;
    left: calc(var(--padding) * -1);
    bottom: -1px;
    width: calc(100% + var(--padding));
    background: var(--cufflinks);
    transform-origin: left;
    transition: transform 1s ease;
  }

  .card:hover .card-title::after,
  .card:focus-within .card-title::after {
    transform: scaleX(1);
  }

  @media (hover) {
    .card-content {
      transform: translateY(65%);
      transition: transform 1s ease;
    }

    .card:hover .card-content,
    .card:focus-within .card-content {
      transform: translateY(0);
    }

    .card:focus-within .card-content {
      transition-duration: 0ms;
    }

    .card-content > *:not(.card-title) {
      opacity: 0;
      transition: opacity 1s linear;
    }

    .card:hover .card-content > *:not(.card-title) {
      opacity: 1;
      transition-delay: 500ms;
    }

    .card-title::after {
      transform: scaleX(0);
    }
  }

  /* .list-container {
    display: flex;
    flex-direction: column;
    width: 600px;
    height: 600px;
    margin-top: 40px;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    border-radius: 24px;
  }

  .list-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .list-text-container {
    display: flex;
    flex-direction: column;
    width: 100%;
    height: fit-content;
    align-items: center;
    justify-content: center;
    bottom: 0;
    background: var(--shade);
  }

  .list-title {
    text-align: center;
    border-bottom: 2px solid var(--text);
    padding-bottom: 4px;
    font-size: 1rem;
  }

  .list-description {
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 10px;
    font-size: 0.875rem;
  }

  .list-details-container {
    display: flex;
    gap: 12px;
    font-size: 0.75rem;
  }

  .list-avatar {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    object-fit: cover;
    border: 2px solid var(--text);
  }

  .list-authors {
    color: var(--text);
    background: #ff9500;
    border: 1px solid var(--text);
    border-radius: 5px;
    padding: 5px;
    cursor: pointer;
  }

  .list-categories {
    padding: 5px;
    border-radius: 5px;
    border: 1px solid var(--text);
    background: var(--brand);
    color: var(--text);
    text-decoration: none;
    cursor: pointer;
  }

  a {
    color: var(--text);
    text-decoration: none;
  } */
</style>
